<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QDORXhpZgAATU0AKgAAAAgAAgEyAAIAAAAUAAAAJodpAAQAAAAB
        AAAAOgAAAAAyMDIyOjExOjA1IDE3OjI2OjQ2AAABkoYABwAAAHoAAABMAAAAAFVOSUNPREUAAEMAUgBF
        AEEAVABPAFIAOgAgAGcAZAAtAGoAcABlAGcAIAB2ADEALgAwACAAKAB1AHMAaQBuAGcAIABJAEoARwAg
        AEoAUABFAEcAIAB2ADYAMgApACwAIABxAHUAYQBsAGkAdAB5ACAAPQAgADgANQAK/9sAQwAGBAUGBQQG
        BgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxobIxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sA
        QwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo
        KCgoKCgo/8AAEQgCLAK3AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//E
        ALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYX
        GBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SV
        lpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5
        +v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMR
        BAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJ
        SlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5
        usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A8p/z0pM/T8qK
        K+wPSDP0/KjP0/KiigQZ/wA4p2f84ptOoENz/nFGf84oooAM0ZoWnUCG5oz/AJxTqbTEFOoooENozTqb
        QA7/AD0o/wA9KKKAE/75/KlU/T8qKatBI7/PSk/75/KlooEJ/npSLRQtAhzfh+VNz9Pyp1NagkM/T8qM
        /T8qKKADP0/KjP0/KiigkM/T8qM/T8qKKADP0/KjP0/KiigAY/5xRn/OKKKCBf8APSmt/nilpKBBn/OK
        M/5xRRQAZ/zijP8AnFBopkhn/OKXP+7+VJRQIXP+7+VGf938qSigQMaP89KKKAA/h+VGfp+VFFBIZ+n5
        Uf56UlLQSGfp+VGf84pKKBC/56UZ/wA4pKKBBmk/L8qWimIRT/nFGfp+VApaQmJn/OKM/wCcUlFBIuf8
        4o/z0pabQIX/AD0o/wA9KSimIXP+cUZ/zikooJD8vyo/z0oooEH+elGaKSgQtGf84oWikAZ/zijP+cUl
        KtBI3/PSj/PSnUlAhP8APSj/AD0py0lAhc03NLRTJFzRmkooELmkz/nFFFIQuaKSigCWiinVJ9aNop1F
        Ahq06iimIKKKKACiiigQUUUUAFFFFAgooooEFFFFABRRRQSFFFFAgooooEFFFFAhtOWiimIKbTqKBDaK
        KdQIbRTqbQAUUUUEhRRRQIKKKKBBSUtFBIlBpe9FACUUUUEhRRRQAUUUUEhRRRQIKSlpMUEi0lLSYoEF
        FFFAgooooEFNp1JigBaKKKCRtFOpBQSxKKdTaBBRTqbQJhRRRQIKKKKBBQtFFBIUlLRQIFooooEJSrQ1
        FAgpKWigQLRRRQISilxRQIkxTqKKR9aFFFFABRRRQIKKKKBBRS0mKBBRRQtABRS0NQIShaKFoEFFLSNQ
        AUq0lLQAlFLSYoICijFLTASijFFAgooooJCiiigAooooJCm06igBtOoooJGtRTqKBDaKdRQIbRRRQIKK
        KKBBRiiigQYpDS0UCEopaMUAJRS4pKCAooooEFFFFAgpKWimITFFLSGkSFFFLQAlFLSUEhRRRQIKKKKY
        gooooENop1IKCRKKdRQIbRRSmgBKKKKCQopTSUhBRSikoJCiiigAooooJCiiigRNRQtLSPrhKKKKBCrR
        RRQAlFLRimIKKKKQgooopiCiiigQUUUUAFFFFAgoopaAEooooJCiiigQUUUUCEpaKKBCUYpaKBCLRS0U
        CEopaTFAgopaKAEooopkhRRRSEFFFFAgooooJGtRTqbigQUU6imIbRRRQAUUUUEiUUtFAhKKWjFBIlFF
        FAgooooEFFFFAgpMUtFABSYpaKCQooooJCkpaTFAgoooxQIKKWkoEFFLSUCCiiigkKKKKBBRRRQIKQUt
        FAgptOooEIKKWigRLRRRUn1oUUUUwCilpKBBRRRQAYopaKBCUUUUCFpKWigQlLRRQISilooEJS0UUAFJ
        S0UEiUtItLQISilpKACilooEJRRRTEFFLSUCCiiigQUUUUCCkpaKACiiiggSilakWgQUUtJQIKKKKBBR
        RRQIbRTqKBBTadRQSNoop1ADaKKKCQooooEFGKKKBCUUuKKCRKKKKoAopcUlBIUUUUCCiiipEJiloooJ
        CkpaKoQUmKWigQlL2pMUtABSUtFSSFJS0UEiUtHeiqEFJS0goELRRRUiJaKKKR9eJRS0lAC0UUUEhSfx
        UtFAgooooEFFFFMAooopCCiiigQUUUUxBRRRQIKKKKACiiigkKKKKBBRRRQIKSlooEFFFFAhKFpaKACk
        paKCRKKWiqASiloqSRKKKWqEJRRRQIKKKKBBSUtFBIlFFLQAlFDUUCCiiigkKa1OooENp1FFAhtFOptA
        gooWigkKKKKACkpaKBCUClooJEopaKCRBRQKWgQlFBooEFFFFAgooooEFFFFABRRRQQFFFFAgooooEFF
        FFAiVaKKKg+uCiiimAUUUUEhRRRQIKKdSYoASiilWgQtNp1JigQlLikp1ADaKdSYoEJTqRaWgQ2inUmK
        BC0mKWigBtFOooJCm06igQ2inUi1QhKKdRQIbRRSrQISinUjUCEoop1AhtFFFABRRRQSFJS0uKCRtFLR
        QISinYptAgooWnYoENoxRRQITFLiiigBMUUtJigkKKWigkSijFFABRS4pKCQptOooEFGKKKBDadim4p1
        BI2inU2gQUU6m0CCiiigQUYoooJEFFLRQAlApaKBCUUtFBIUlLRQSJS0UUCEopaKBElLikp1SfXDaKdR
        QAi0tJiloAKTFLRQSFFFFUITFLRRQAUUUUCCiijFAgooooEFFFLQISiiigAoo7UtAhKKKKACilpKCQoo
        paBCUUUUCCiiigQUUUUCExS0UUEhTadRQA2lxS0UEjaKdTaBBRSrS0CG0UUUCCiiigQUlLRQIKKKKBCU
        UtJQSFFLSUCCiiigQUYoooEJS0UUCEopaSgkKKWjFACUUUUyQooooEFFFFIkKbinUUCDFNxTqKBDcUYp
        1FAhtFOooAbiinUUEDVoxTqKBDaKdRQIfiloooPrgooooAKKKKBBRRRQAUUUYoJCijFFAhaTFLRQISgU
        YpaAENGKWigQlLRRQIKKKKBCCloooEFJS0UAFFFFBIlApaKBBRRRQISlpMUtAgpKWkxQIKKWkxQIKKMU
        UCCilooASiiigkRaWiigQU2nUUxBSYpaKBDaKXFLQSNop1JigQlFFFABRRRQSJS0UUCCkpaKCRKKWigQ
        lFFFAgopaSgQUUUUAFJS0UEhSUtFBIlFFLQISilpMUCCilpKCQooxS0AJRRiigkKKXFJigQUUq0UCH0U
        UUj64KKO1LQISgUUtAhMUtFFACUtJiloAKTFLRQSFFFFAgooooAKKKWgkSiiloASilxRigQlFLRQISil
        xRQIKKKKAEopaBQSJRS4ooEJRRS4piEopcUlAgopRRSEJSYpaKYgopaSgQUUUUAJiloooJEopaKBBSUt
        FBIlFFLQISilpKBBRRRQIKbTqKAG06iigkbRTqbQSFFOpMUCEoopcUxMSiiigQuKSiigQuKbS0UEhSUt
        FAhKMU7FJQISilooEJRS0lBIUUq0UCEoopaAEop2KbQQFFLRQIfSYpaKk+uCiiigQUUUUAFFFLQAlFFF
        AhaSlooASlpKWmSGKSlooEFFAooAKBRRQIKKKKBBRRRQIKKKKBBRRRQIKKKKACiiigkKKKKBBRRRQIKK
        KKBAaSlooEAooooJEpRRQKAA0lLRQAlFLRTJEopcUlBIUUUtAhKQ0tFAhKWiigQUlLRQIKSlooJEoopa
        BCUUtJQIRqWiigQU2nUUEhSYpaKBDaKdRQA2inUmKCRKKdRQIbRRTqCRtFLikoEFFOptAgopVpaBDaKK
        XFMliUUUUCH0UUVJ9cFFFLQAlFLikoELRSUtAgxRRRQIKKKKACiiigAooooJCiiigQUUUUCCiiigQUUU
        UAFFLikoEFLikp1AhtFLikpiFxSU6igBtFLigUEiUU6kxQISiinUCG0UuKSgQUU6kxQISiiigkKKXFGK
        AEooooJCiiigQUUUUCDFFFFAgoxRRQISilxRimISilxRigQ3FLS0YoJEpMU6koEJijFOpKBCYpaKTvQI
        MUUtLQSJRRRQISilooASijFGKCAopaKBCUUUtAhKKKKCQooooEJilpaTFABRRRQSLRRS1J9cJS0YoxQI
        KMUdKKBBiiiimAUUUUhBRRSimISilxSUAFFFLigBKKXFJQSFFOoxQIQUtFFAhtFOooEFFFFACYpaKKBB
        RRRQIKKKKBBRRQtBIUUUUCCiiigQUUUUCCiiimIKKKKBBRRRQITFLRRQAU2nUUEiCjFLRQIbRTqTFAhK
        KdRQSNooooAKKXFJQSFFFFABRiiigkKMUUUCCiiigkKSloxQIMUUUUCEopaKBCUUuKKZIlFLiikISilo
        oEJRRS0yRKTFOpKBBRS4pKBCYop1FABRRRipPrAooooAKKKKBBRRRQAUUUooEJRS4pKBBTqQUtAhMUtF
        FABRRRQAUUUUEhRRRTEFFFFIQUUUtAhKFpaSmIWkpaKBCUtJS0CEopaKACkpaKAEpaKKCApKWigAWiii
        gkShaWigQUlLRQIRaKWigQlFLSYoAKKWigkSijFC0yQopaTFABRRRQSFNp1FAhBS0YooENpRS0UANop1
        FBI2iinUEjaKXFGKBCUUuKMUEiUUuKMUAJRS4oxQISilxRigkQUUUUCCgUUUEhRiiigTCiiigQCiiigQ
        UUCipPrQooopiCiiikAUUUUxBRS4pKBDqKQUtADadRRQIKKKKBBRRRQAUUUUEhRS0lAC0UUUCExS0UUC
        CiiigQUUUUCCiiigVgooxRQIKKKKACiiigkKKMUUCCihaMUCCiiimIKKWigQlFFOxQIbRRiigQUUtI1B
        IUUUUAFFFFBIUUUUCCkpaKBBRRRQISjFLRTEJRS0mKCQopaKQhKKKVaBCUUtJTEFFLSUEhRRRigQUUUU
        AFFFFBImKWiigkbSilooEFJilooEFFFFBI3FFFFSfXBRRRQIKKKKACilxSUCHU2nUUCG06iigAooooEF
        FFLQISloooEFFFFABRRRTAKKKKCQooooEGKKFpaBCUtJS0CExRS0UCCiiigQmKWiigQUUUUAFFFFBIUU
        UUCCiiigQUUUUCCiiigQUUUUCCiiigQUUUUwClxSUUECUtFFAhMULS0UCFxTaWigQlGKKWgkSilpKACi
        lpKCQoopaBCUUUUCCiiigQUUUUEhRRRQIKSlooAKKKKCBKWiigQjULS0UxBRRRQIZRRRUH1wUUUUEhRR
        RTEFOptFADqKKKBBRRRQIKKKKAChaMUUCFooooEFFFFAgooooAKKKKCRaTFC0tAhKWiigAooooEFFFFM
        QUUUUCCiiigQUUUUCCihadQA2ilxSUEC4pKdRigBq0uKVaKCRtFOxRQITFJTqKBDaXFKtFAhtFOpq0AF
        FOooJG0U6igQ2inYoxQIbRTqbQIKKKdigQ2inYptMkKKdim0AFFFFBIUUUUCCilxSUCCiiigkXFJRRQI
        KTFLRQIKTFLRQSFFFFAhcUlFFAhMUUtFBJHRRRUn1wUUUUAFOptFBIuKSnU2gQ6im06gAooooEFFFGKB
        C0UUUCCiiigQUUUUAFFFFMQtFItLQAlLRRQSFFFFAgooooAKKKdQSNpy0YooAa1FOooEFFFFAgooooEF
        FFFABRRRQSFFFLQISilpKYgopaSgQUUUtBIlFK1JQIKKWkoAKKFpaCRKKKVaBCUUtJQIKKVaKCRKKKKB
        BRRRQIKKKKACiiiqJChqKKCQooooENp1FFAgahaKKBBTadRQIKKKKCQWiiigQYooooJIRRRRUH1oUUUU
        gCiiigkKdSYpKYDqKKKBBRRRQALS0lFAhaSlooEFFFFAgooooEC0tJiigBaKKKBBRRRQAUUUUEhTqbTq
        BBRRRQIKKKKBBRRRQIKKKVaBCUUtJTAWkpVooEC0UneloASlWiiggKSlooEC0UUVQhMUq0UVIgoooqhB
        RRRQIKKKKACiiigkKKKKBBRRRQIKKKKCQopaSgQUUUUCExS0UUAFFFFBAUUUUCBaKKKBCUtFFBIlFLRQ
        IKSlooAKSlooJBaKKKCSCiiioPrAooooAKUUlFADqKQUtBI2nUU2gB1FFFAgooooAWikpaBBRRRTEFC0
        UUgFpcUlFMQUUUUhBRRRTEFOWm0UAOptOooJCiiigQUUUUCCiiigQUUtJigQtFC0UCBaKKKBBRRRVAFF
        FFBIUUUUCCiiloEJRS4pKBBRS0UCEopaKBCUuKKKBBikpaKACiiigkKKKKBCGgUtFBIUUUUCDFJS0UCC
        jFFFAgxRRRQSGKMUUUCCjFFFAgooooEGKKKKCQxRiiigQUYoooAQUUtFBJWoooqD6sUUUlLQIKKKKYBS
        ikopAOoptOpkhRRRQAUUUUCBqKWkoELRRRQIKKKKAClpMUtAgooooEFFFFABS4pKctAgoooqgCiiigkK
        KWkoEKtFC0UCCiiigQUUUUAFFFFBIUUtFAgoxSUtABRRRQSFGKKKBBRRRQIKKKKBBRRRQIKKKdQIbRTq
        KBDaKdRQSNp1Np1AhtOoooEFNp1FAgooopiCiiigkbTqKQUALTadSGgkWm06igQgpaKKBDadRRQSFFFF
        AgooooEJiilooJKlFFFQfWBRRRQIWikpRQIKKKKACiiigB1FNp1BIUUUUAFLSUUCFooooEFFFFUIWikp
        aACiiigQULRRQIKKdRQIKKFooAKKKKAFWikpaCRMUtFFAgooooEFFFFAgoopaBCCloooEGKKKKBBRRRQ
        AUUUUEjqbTqKBBRSYpaBBRRRQIKKKKYgooooEFFFFAgooooJCiiigQUUUUCCiiigQUUUUEhRRiigQUUY
        ooAKKKDQSFFFLQSJRRRQIKKMUtAhKBS0UCEopaKBFKlpKKg+qFopKWgAooooELRSUtUIKKKKACiiigB1
        FNp1BIUUUUAFLSUUCFooooEFFFFAhaKRaWgAooooEFOptFAh1FFFAgooooAKKKKAFooWigkKKKKBBRRQ
        KBBQKXFFAgooooEFFFFMQUU6igQ2lxS0goAMUClooJCiiigQUUUUCCiiigkKKKBQIKKMUUCCilpDQACi
        looJEFLRRQITFLRRQIKSlopiCkpaKBBRRRQSFFFFABRRRQSFFFLQSJRRQtAgopcUi0CCilooJKNFFFSf
        VBS0lFAC0UlLQIKKKKAFopKWgQUUUUAFFFFADqKbTqCQooooAKWkooELRRRQIKKKKBC0UlLQAUUUUCHU
        U2nUCCiiigQUtJRTAWiiigkKKKKBBRS0UAFFJS0EhRRRQAU6m06gQ2nUUUCCiiigQUUUUAFFFFBIUUUU
        CCiiigQUClpMUyRaSlooEFFFFAgooooAKKKKCQooooEFFLikoEFFLRigQlLikWlpkiUtJS0CEpaKKAEp
        aKKCGFJS0UCCiiigQUUYooJM+nU2ioPqh1JmkooEOoptOoELRSUZoAWiiigApaSigQtFAooAKUUlFBI6
        iiigAooooEFLSUtABRRRTEC0tC0UCCiiigB1FNp1AgooooEHaiiloEC0UlLQAUUUUEhQKKKBC0UUUCCi
        iigQUUUUxDqKKKBBRRRQIKKKKACiiigkKKOtGKBC0lFLQISloooEFFFFAgoooWgQUUtJTEFFLRQAUYoo
        oICjFFFAgooooAKKKKCQoopy0CG0U6igQ2inUUEjcUU6igQUUUUCCiiigkzKWkoqD6kWiiigQUUUUAOo
        pq06gQUtJRQAtFFFAgpRSUUwFooooAKdTaKRI6iim0wHUtJRQIWiiigQUtJRQIWiiigAoWiigQ6im06g
        AooooELSUUtAgWihaKYBRRRQSLiiiigQUUUUCCnU2igQ6iiigQUUUUCCiiigQUYooFMA6UtFJQSLRRRQ
        IKFoooEFFFFAhaSiloEFFFFAgooooEFFFFABRRTqCOUbTqMUUCChaKKYgooooEFFFFAgooooEFFFFBIU
        UUtAhKKKKBGXS0lFZn04tFJS0ALRSUtAgp1NooAdRTaKYh1LTc0tAC0UUUCClpKKAFooooAKKKKCQp1N
        ooEOWlpKM0ALRRSUCFpaSimIWiiikAUUUUxDqKFooEFFFFAhaKSloAKKKKYC0UlLSICiiimAUuKSnUCC
        iiigQUUUUCCiiigQUUUUCFopM0tABRRRQSFFFFAgWlpKWgQd6KKKBBRRRTEFFFFIQUU7FNpiHUUUUEhR
        RRQIKKKKBBRRRQIKKKWgkRaMUtFAgooooAMUUUUEhRRRQIyFp1NorM+mHUUUUALRSUZoAWlpKKBC0UUU
        wCnU2igQ6lpq0tAC0UlGaBC0tJSZoAdmikpaCQooooAUUtNp1MQULRRQAtFJmloEFLSUUCFopc0lAgpy
        02igQ6ijNFMAooooELRQtFABRRRQSApaSgUCFooooAdRRRQITNLRRQIKKKKYgooopCDFLRRTEFFFFABQ
        tFFBIuKShaXFAgooooEFFFFBIUUU6gQUUUUCCiiigAooopkhS0lLQISloooEFFFFBIUUUUCCiilWgQlF
        LRQAUUUUEGPRRmkrI+mFzRmiigB2aKbRmmA6lpKKBC07NNooAWikooELRRRQA6im0uaBC0UUUAGaWkpa
        YC0UlLQAUuaSigkU0tNooEOoptOoELRSUtMApaSigQtFJS0CCiiigQ6ikzS0AFLSUUCFooooAKKKKCRa
        KSloEFFFFAh1FFFMQUUUUAFFFFAgFLSUUCFooooEFFFFABS0UlBItFFFMQUUUUCCnLRRQSFFFFAgoooo
        EFC0tI1AC0ULRQSFFFFBIUUUUCCilooEFFFFAgWiiigQUUUUAY1FFJmsj6QdmjNJRQIWikopgLTqbmig
        B1FNzTqBC0UlLmgAooooELRSUtADqKbRTEOpaSigBaKSigB1FJS0EhRRRTEFLmkooAdRTadQIKKKKBC0
        UlLQAtFJS0CCiiigQ6im06mAUtJRSELRQtFMAooooIFopKWgAooooEOooooEFFFFAgooopiClpOlLQAU
        UUUCBaWkooJFooooAKKKKBBTqbTloEFFFFBIUUUUCDNLRRTEFFFFIAooopkBRRS0CCiiigQUUUUCCiii
        gQUU6igRh0UUVifRhmlpKWmAUUUUAFFJmloAWikooEPoptGaAHUUUUCFooWimAUtJRQIWlzSUUAOoooo
        AKBRRTJFpc0lFAC0UUUCCiiigB1FNooEOoWiigQtFFFADs0lJS0xBRRRQIdRTadQIKKKKAFopKWgAooo
        oIFopKWgQU6m0UwHUUUUCCgUUUCCiiigQtFIKWgQUUUUAKtFHeimSFFFFAgWnU2nUCCiiigQUUUUCFWi
        kpaBBRRRQIKKKKAFopKWggKKKKBBRRRQIdTaUUtAgopBRQSYVFJS5rE+jFzRmkooAdRTaKYD6KSigBaK
        KKBC5opKXNABQtFFMQ6jNFFAC5ozSUUALS0maKBC06mUtMBc0ZpKKAHUU2nUEi0UUUAFLSUUCFooooEF
        OptFMB1FFFAgpaSigQ6ikozQAtFJSrQIdRTadTEFFFGaAFopKWgkKKKKBC0UlLQIdRTaKBDqKKKACiii
        gQtFJS0CCiiimIKKKKAFopKWggKKKKAHUUUUEhRRRQIKVaSigBaKKKBBRRRVCClWkooJFooooEFFFFAg
        p1Np1BIUUUUCOfzS0maK5z6IWikzRmgB2aM0lFMBaKSlzQAuaWm06gQZpaSloAKWm5paYC0ZozSUCFzR
        miigB1FNWnUwFopKWgQtFJTs0AJRS5pKCRc0tNpVoAdRSUtMQtFJRQAuaKSlFAhc0tNooEOoopM0ALS0
        lFMQtFFFAhaKFooAKKKKBDqKatOoAWikozQSLRRRTELRSUuaBBTqbRQIdRRRQIKKKKAFopKWgQUUUUCC
        iiigkWiiiqEFOptFAh1FFFSIKKKKoQUtJQtAhaKKKBBS0lKpoAKKKKCQooooEFOoooEFFFFBJztLmm0V
        zn0I+im0UwHUUmaWgBaKSloELRSUUAPopuadQAUtNzS0wFooooELmjNJRTAKWkooEPoptFADs0tJRQAt
        FJS0Ei0UUuaYC0U2igQ+ikooAWiiigQtFNzTqYBRRmigQU6m0v0oELS0lFAhaKKKAClpKKBC06m0uaAF
        optOpgLRSUtBIUUUUCFopKWgQU6m0UCHUUUUCCiiiqEFFFFAhaKSloAKXNJRQSLRRRQIKdTaKBDqKKKB
        BSrSUUCFooooJCiiigB2aSkpaCQooooEOptFOoEFFFFMRzeaWkormPoBaM0lLQAtFJS0wHZoptFAh2aW
        kooAWlzSUUALTqZSrTEOoptOoAWkzRRTAWikpaAClpKKBCrTqYKWgB1LTc0tBItFJmjNMBadmm0UCFpc
        0lFADqKKKBBRmiimA6jNJRQIWiiigQUuaSigB1FIKWgQtFJS0xBS0lFAC0UUUALmlptFBI6iiigQtFJS
        0CFopKBVCFp1NooAdRRRQIKKKKBBS0lFAhaKKKAFpKKKCRaKKKBBTqbRQIdRRRQIWikpVoJCiiimIKKK
        KAFopKWgkKdTaKCR1FFFAH//2Q==
</value>
  </data>
</root>